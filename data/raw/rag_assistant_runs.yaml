experiments:
- experiment_id: exp_001_natural
  problem_statement_id: 1
  version: natural
  prompt: "I need to find the best temperature and time for sintering ceramic samples\
    \ to get maximum density. \nI can run about 20-30 experiments.\n"
  timestamp: '2025-10-29T00:20:48.637271'
  status: success
  grid_selections:
    note: Grid selections would be extracted from debug output
    parsed: true
  generated_script_path: /tmp/rag_experiments/scripts/exp_001_natural/honegumi_generated_bc6d3669ace1.py
  log_artifact_url: null
  notes: Natural version - underspecified request from materials scientist
  log_path: /tmp/rag_experiments/logs/exp_001_natural_2025-10-29T00-20-48.637271.log
  grid_validation:
    matches:
      objective:
        actual: Single
        expected: Single
      model:
        actual: Default
        expected: Default
      task:
        actual: Single
        expected: Single
      categorical:
        actual: false
        expected: false
      sum_constraint:
        actual: false
        expected: false
      order_constraint:
        actual: false
        expected: false
      linear_constraint:
        actual: false
        expected: false
      composition_constraint:
        actual: false
        expected: false
    mismatches: {}
    summary:
      total_parameters: 8
      correct: 8
      incorrect: 0
      accuracy_percent: 100.0
  actual_grid_selections:
    objective: Single
    model: Default
    task: Single
    categorical: false
    sum_constraint: false
    order_constraint: false
    linear_constraint: false
    composition_constraint: false
- experiment_id: exp_002_corrected
  problem_statement_id: 1
  version: corrected
  prompt: "I want to optimize sintering conditions for ceramic samples to maximize\
    \ density (g/cm\xB3). \nThe temperature can range from 800 to 1200\xB0C, and sintering\
    \ time from 1 to 6 hours. \nI have budget for about 20-30 experiments. The measurements\
    \ will have some noise since \ndensity measurements can vary a bit between samples.\n"
  timestamp: '2025-10-29T00:06:50.059046'
  status: success
  grid_selections:
    note: Grid selections would be extracted from debug output
    parsed: true
  generated_script_path: /tmp/rag_experiments/scripts/exp_002_corrected/honegumi_generated_cf2fa317e78a.py
  log_artifact_url: null
  notes: Corrected version - conversational with key details and units
  log_path: /tmp/rag_experiments/logs/exp_002_corrected_2025-10-29T00-06-50.059046.log
  grid_validation:
    matches:
      objective:
        actual: Single
        expected: Single
      model:
        actual: Default
        expected: Default
      task:
        actual: Single
        expected: Single
      categorical:
        actual: false
        expected: false
      sum_constraint:
        actual: false
        expected: false
      order_constraint:
        actual: false
        expected: false
      linear_constraint:
        actual: false
        expected: false
      composition_constraint:
        actual: false
        expected: false
    mismatches: {}
    summary:
      total_parameters: 8
      correct: 8
      incorrect: 0
      accuracy_percent: 100.0
  actual_grid_selections:
    objective: Single
    model: Default
    task: Single
    categorical: false
    sum_constraint: false
    order_constraint: false
    linear_constraint: false
    composition_constraint: false
- experiment_id: exp_003_solution
  problem_statement_id: 1
  version: solution
  prompt: "I need to optimize two continuous parameters (temperature: 800-1200\xB0\
    C, time: 1-6 hours) \nto maximize density (g/cm\xB3) of ceramic samples. This\
    \ is a single-objective optimization \nwith noisy measurements. I have a budget\
    \ of about 25 experiments.\n"
  timestamp: '2025-10-29T00:08:36.184972'
  status: success
  grid_selections:
    note: Grid selections would be extracted from debug output
    parsed: true
  generated_script_path: /tmp/rag_experiments/scripts/exp_003_solution/honegumi_generated_d62411905f93.py
  log_artifact_url: null
  notes: Solution-based version - explicit parameter specifications
  log_path: /tmp/rag_experiments/logs/exp_003_solution_2025-10-29T00-08-36.184972.log
  grid_validation:
    matches:
      objective:
        actual: Single
        expected: Single
      model:
        actual: Default
        expected: Default
      task:
        actual: Single
        expected: Single
      categorical:
        actual: false
        expected: false
      sum_constraint:
        actual: false
        expected: false
      order_constraint:
        actual: false
        expected: false
      linear_constraint:
        actual: false
        expected: false
      composition_constraint:
        actual: false
        expected: false
    mismatches: {}
    summary:
      total_parameters: 8
      correct: 8
      incorrect: 0
      accuracy_percent: 100.0
  actual_grid_selections:
    objective: Single
    model: Default
    task: Single
    categorical: false
    sum_constraint: false
    order_constraint: false
    linear_constraint: false
    composition_constraint: false
- experiment_id: exp_004_natural_p2
  problem_statement_id: 2
  version: natural
  prompt: "I'm working on developing an anti-corrosion coating formulation and need\
    \ to optimize \nthe composition. I have five components to work with: resin, inhibitor,\
    \ insulator, \nstabilizer, and I also need to control the coating thickness. I\
    \ can test about 6 \nsamples at a time in parallel. I know there are some constraints\
    \ on the composition \nlike the resin fraction should be higher than inhibitor\
    \ and insulator, and the \nfractions need to sum to 1. Looking for the formulation\
    \ that minimizes corrosion damage.\n"
  timestamp: '2025-10-29T00:10:07.734904'
  status: success
  grid_selections:
    note: Grid selections would be extracted from debug output
    parsed: true
  generated_script_path: /tmp/rag_experiments/scripts/exp_004_natural_p2/honegumi_generated_cce5498c7e1e.py
  log_artifact_url: null
  notes: Problem 2 (Computational Intermediate) - Natural version
  log_path: /tmp/rag_experiments/logs/exp_004_natural_p2_2025-10-29T00-10-07.734904.log
  grid_validation:
    matches:
      task:
        actual: Single
        expected: Single
      categorical:
        actual: false
        expected: false
      sum_constraint:
        actual: false
        expected: false
      linear_constraint:
        actual: false
        expected: false
      composition_constraint:
        actual: true
        expected: true
    mismatches:
      objective:
        actual: Multi
        expected: Single
      model:
        actual: Default
        expected: Fully Bayesian
      order_constraint:
        actual: false
        expected: true
    summary:
      total_parameters: 8
      correct: 5
      incorrect: 3
      accuracy_percent: 62.5
  actual_grid_selections:
    objective: Multi
    model: Default
    task: Single
    categorical: false
    sum_constraint: false
    order_constraint: false
    linear_constraint: false
    composition_constraint: true
- experiment_id: exp_005_corrected_p2
  problem_statement_id: 2
  version: corrected
  prompt: "I'm optimizing an anti-corrosion coating formulation with 5 composition\
    \ parameters: \nresin fraction (0-1), inhibitor fraction (0-1), insulator fraction\
    \ (0-1), stabilizer \nfraction (0-0.1), and coating thickness (0.1-10 mm). The\
    \ fractions must sum to 1, \nand I need the resin fraction to be greater than\
    \ both inhibitor and insulator fractions. \nI can run batches of 6 samples in\
    \ parallel, planning around 15-20 batches total. \nMeasurements will have some\
    \ variability. I want to minimize corrosion damage score. \nI'd like to use a\
    \ fully Bayesian model if possible for better uncertainty handling.\n"
  timestamp: '2025-10-29T00:12:23.890765'
  status: success
  grid_selections:
    note: Grid selections would be extracted from debug output
    parsed: true
  generated_script_path: /tmp/rag_experiments/scripts/exp_005_corrected_p2/honegumi_generated_8c0b5426c614.py
  log_artifact_url: null
  notes: Problem 2 (Computational Intermediate) - Corrected version
  log_path: /tmp/rag_experiments/logs/exp_005_corrected_p2_2025-10-29T00-12-23.890765.log
  grid_validation:
    matches:
      objective:
        actual: Single
        expected: Single
      task:
        actual: Single
        expected: Single
      categorical:
        actual: false
        expected: false
      sum_constraint:
        actual: false
        expected: false
      linear_constraint:
        actual: false
        expected: false
      composition_constraint:
        actual: true
        expected: true
    mismatches:
      model:
        actual: Default
        expected: Fully Bayesian
      order_constraint:
        actual: false
        expected: true
    summary:
      total_parameters: 8
      correct: 6
      incorrect: 2
      accuracy_percent: 75.0
  actual_grid_selections:
    objective: Single
    model: Default
    task: Single
    categorical: false
    sum_constraint: false
    order_constraint: false
    linear_constraint: false
    composition_constraint: true
- experiment_id: exp_006_natural_p3
  problem_statement_id: 3
  version: natural
  prompt: "Need to optimize a polymer formulation for a client. They want high strength\
    \ \n(at least 70 MPa) and high biodegradability. We have 5 different monomers\
    \ plus \nextrusion rate and temperature to tune. The monomers need to sum to 1.\
    \ I have \nsome historical data from literature (3 data points) that could help\
    \ bootstrap \nthe model. This is clearly a multi-objective problem with a threshold\
    \ constraint \non strength. What's the best way to set this up in Ax?\n"
  timestamp: '2025-10-29T00:14:50.569881'
  status: success
  grid_selections:
    note: Grid selections would be extracted from debug output
    parsed: true
  generated_script_path: /tmp/rag_experiments/scripts/exp_006_natural_p3/honegumi_generated_b6eda7cc33cb.py
  log_artifact_url: null
  notes: Problem 3 (Data Science Advanced) - Natural version
  log_path: /tmp/rag_experiments/logs/exp_006_natural_p3_2025-10-29T00-14-50.569881.log
  grid_validation:
    matches:
      model:
        actual: Default
        expected: Default
      task:
        actual: Single
        expected: Single
      categorical:
        actual: false
        expected: false
      sum_constraint:
        actual: false
        expected: false
      order_constraint:
        actual: false
        expected: false
      linear_constraint:
        actual: false
        expected: false
      composition_constraint:
        actual: true
        expected: true
    mismatches:
      objective:
        actual: Single
        expected: Multi
    summary:
      total_parameters: 8
      correct: 7
      incorrect: 1
      accuracy_percent: 87.5
  actual_grid_selections:
    objective: Single
    model: Default
    task: Single
    categorical: false
    sum_constraint: false
    order_constraint: false
    linear_constraint: false
    composition_constraint: true
- experiment_id: exp_007_corrected_p3
  problem_statement_id: 3
  version: corrected
  prompt: "I'm setting up a multi-objective Bayesian optimization for polymer design\
    \ with \ntwo objectives: maximize strength (MPa) with threshold \u226570, and\
    \ maximize \nbiodegradability score. The search space has 7 parameters: 5 monomer\
    \ fractions \n(each 0-1, must sum to 1), extrusion rate (0.01-0.1 mm/s), and temperature\
    \ \n(120-200\xB0C). I have 3 historical data points from literature that I'd like\
    \ to \nincorporate via attach_trial. Planning to run about 35 trials total. I'm\
    \ \ncomfortable with the default GP model and standard acquisition function for\
    \ \nmulti-objective (EHVI). How should I structure the ObjectiveProperties for\
    \ \nthe threshold constraint?\n"
  timestamp: '2025-10-29T00:16:42.015064'
  status: success
  grid_selections:
    note: Grid selections would be extracted from debug output
    parsed: true
  generated_script_path: /tmp/rag_experiments/scripts/exp_007_corrected_p3/honegumi_generated_45857fb64770.py
  log_artifact_url: null
  notes: Problem 3 (Data Science Advanced) - Corrected version
  log_path: /tmp/rag_experiments/logs/exp_007_corrected_p3_2025-10-29T00-16-42.015064.log
  grid_validation:
    matches:
      objective:
        actual: Multi
        expected: Multi
      model:
        actual: Default
        expected: Default
      task:
        actual: Single
        expected: Single
      categorical:
        actual: false
        expected: false
      sum_constraint:
        actual: false
        expected: false
      order_constraint:
        actual: false
        expected: false
      linear_constraint:
        actual: false
        expected: false
      composition_constraint:
        actual: true
        expected: true
    mismatches: {}
    summary:
      total_parameters: 8
      correct: 8
      incorrect: 0
      accuracy_percent: 100.0
  actual_grid_selections:
    objective: Multi
    model: Default
    task: Single
    categorical: false
    sum_constraint: false
    order_constraint: false
    linear_constraint: false
    composition_constraint: true
